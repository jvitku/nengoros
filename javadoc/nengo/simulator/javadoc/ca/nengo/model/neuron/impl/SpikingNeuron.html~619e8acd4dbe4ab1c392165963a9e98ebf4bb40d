<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_40) on Fri Dec 27 19:58:34 CET 2013 -->
<title>SpikingNeuron (simulator 0.0.4-SNAPSHOT API)</title>
<meta name="date" content="2013-12-27">
<link rel="stylesheet" type="text/css" href="../../../../../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="SpikingNeuron (simulator 0.0.4-SNAPSHOT API)";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../../ca/nengo/model/neuron/impl/SpikeGeneratorOrigin.html" title="class in ca.nengo.model.neuron.impl"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuronFactory.html" title="class in ca.nengo.model.neuron.impl"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../../index.html?ca/nengo/model/neuron/impl/SpikingNeuron.html" target="_top">Frames</a></li>
<li><a href="SpikingNeuron.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">ca.nengo.model.neuron.impl</div>
<h2 title="Class SpikingNeuron" class="title">Class SpikingNeuron</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>ca.nengo.model.neuron.impl.SpikingNeuron</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><a href="../../../../../ca/nengo/model/nef/NEFNode.html" title="interface in ca.nengo.model.nef">NEFNode</a>, <a href="../../../../../ca/nengo/model/neuron/Neuron.html" title="interface in ca.nengo.model.neuron">Neuron</a>, <a href="../../../../../ca/nengo/model/Node.html" title="interface in ca.nengo.model">Node</a>, <a href="../../../../../ca/nengo/model/Probeable.html" title="interface in ca.nengo.model">Probeable</a>, <a href="../../../../../ca/nengo/model/Resettable.html" title="interface in ca.nengo.model">Resettable</a>, <a href="../../../../../ca/nengo/model/SimulationMode.ModeConfigurable.html" title="interface in ca.nengo.model">SimulationMode.ModeConfigurable</a>, <a href="../../../../../ca/nengo/util/VisiblyMutable.html" title="interface in ca.nengo.util">VisiblyMutable</a>, java.io.Serializable, java.lang.Cloneable</dd>
</dl>
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><a href="../../../../../ca/nengo/model/neuron/impl/ExpandableSpikingNeuron.html" title="class in ca.nengo.model.neuron.impl">ExpandableSpikingNeuron</a></dd>
</dl>
<hr>
<br>
<pre>public class <span class="strong">SpikingNeuron</span>
extends java.lang.Object
implements <a href="../../../../../ca/nengo/model/neuron/Neuron.html" title="interface in ca.nengo.model.neuron">Neuron</a>, <a href="../../../../../ca/nengo/model/Probeable.html" title="interface in ca.nengo.model">Probeable</a>, <a href="../../../../../ca/nengo/model/nef/NEFNode.html" title="interface in ca.nengo.model.nef">NEFNode</a></pre>
<div class="block">A neuron model composed of a SynapticIntegrator and a SpikeGenerator.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../../serialized-form.html#ca.nengo.model.neuron.impl.SpikingNeuron">Serialized Form</a></dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="nested_class_summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<ul class="blockList">
<li class="blockList"><a name="nested_classes_inherited_from_class_ca.nengo.util.VisiblyMutable">
<!--   -->
</a>
<h3>Nested classes/interfaces inherited from interface&nbsp;ca.nengo.util.<a href="../../../../../ca/nengo/util/VisiblyMutable.html" title="interface in ca.nengo.util">VisiblyMutable</a></h3>
<code><a href="../../../../../ca/nengo/util/VisiblyMutable.Event.html" title="interface in ca.nengo.util">VisiblyMutable.Event</a>, <a href="../../../../../ca/nengo/util/VisiblyMutable.Listener.html" title="interface in ca.nengo.util">VisiblyMutable.Listener</a>, <a href="../../../../../ca/nengo/util/VisiblyMutable.NameChangeEvent.html" title="interface in ca.nengo.util">VisiblyMutable.NameChangeEvent</a>, <a href="../../../../../ca/nengo/util/VisiblyMutable.NodeRemovedEvent.html" title="interface in ca.nengo.util">VisiblyMutable.NodeRemovedEvent</a></code></li>
</ul>
</li>
</ul>
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#CURRENT">CURRENT</a></strong></code>
<div class="block">Name of Origin representing unscaled and unbiased current entering the soma.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="fields_inherited_from_class_ca.nengo.model.neuron.Neuron">
<!--   -->
</a>
<h3>Fields inherited from interface&nbsp;ca.nengo.model.neuron.<a href="../../../../../ca/nengo/model/neuron/Neuron.html" title="interface in ca.nengo.model.neuron">Neuron</a></h3>
<code><a href="../../../../../ca/nengo/model/neuron/Neuron.html#AXON">AXON</a></code></li>
</ul>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#SpikingNeuron(ca.nengo.model.neuron.SynapticIntegrator, ca.nengo.model.neuron.SpikeGenerator, float, float, java.lang.String)">SpikingNeuron</a></strong>(<a href="../../../../../ca/nengo/model/neuron/SynapticIntegrator.html" title="interface in ca.nengo.model.neuron">SynapticIntegrator</a>&nbsp;integrator,
             <a href="../../../../../ca/nengo/model/neuron/SpikeGenerator.html" title="interface in ca.nengo.model.neuron">SpikeGenerator</a>&nbsp;generator,
             float&nbsp;scale,
             float&nbsp;bias,
             java.lang.String&nbsp;name)</code>
<div class="block">Note: current = scale * (weighted sum of inputs at each termination) * (radial input) + bias.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#addChangeListener(ca.nengo.util.VisiblyMutable.Listener)">addChangeListener</a></strong>(<a href="../../../../../ca/nengo/util/VisiblyMutable.Listener.html" title="interface in ca.nengo.util">VisiblyMutable.Listener</a>&nbsp;listener)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html" title="class in ca.nengo.model.neuron.impl">SpikingNeuron</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#clone()">clone</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#fireVisibleChangeEvent()">fireVisibleChangeEvent</a></strong>()</code>
<div class="block">Called by subclasses when properties have changed in such a way that the
 display of the ensemble may need updating.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>float</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#getBias()">getBias</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../../../ca/nengo/model/Node.html" title="interface in ca.nengo.model">Node</a>[]</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#getChildren()">getChildren</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#getDocumentation()">getDocumentation</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../../../ca/nengo/model/neuron/SpikeGenerator.html" title="interface in ca.nengo.model.neuron">SpikeGenerator</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#getGenerator()">getGenerator</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../../../ca/nengo/util/TimeSeries.html" title="interface in ca.nengo.util">TimeSeries</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#getHistory(java.lang.String)">getHistory</a></strong>(java.lang.String&nbsp;stateName)</code>
<div class="block">Available states include "I" (net current into SpikeGenerator) and the states of the
 SpikeGenerator.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../../../ca/nengo/model/neuron/SynapticIntegrator.html" title="interface in ca.nengo.model.neuron">SynapticIntegrator</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#getIntegrator()">getIntegrator</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../../../ca/nengo/model/SimulationMode.html" title="enum in ca.nengo.model">SimulationMode</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#getMode()">getMode</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#getName()">getName</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../../../ca/nengo/model/Noise.html" title="interface in ca.nengo.model">Noise</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#getNoise()">getNoise</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../../../ca/nengo/model/Origin.html" title="interface in ca.nengo.model">Origin</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#getOrigin(java.lang.String)">getOrigin</a></strong>(java.lang.String&nbsp;name)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../../../ca/nengo/model/Origin.html" title="interface in ca.nengo.model">Origin</a>[]</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#getOrigins()">getOrigins</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>float</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#getScale()">getScale</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../../../ca/nengo/model/Termination.html" title="interface in ca.nengo.model">Termination</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#getTermination(java.lang.String)">getTermination</a></strong>(java.lang.String&nbsp;name)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../../../ca/nengo/model/Termination.html" title="interface in ca.nengo.model">Termination</a>[]</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#getTerminations()">getTerminations</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.util.Properties</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#listStates()">listStates</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#notifyAboutDeletion()">notifyAboutDeletion</a></strong>()</code>
<div class="block">This method tells the Node (network) that is being deleted from Nengo, 
 Node can inform its children (child Nodes) that are being deleted, 
 these nodes can e.g.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#removeChangeListener(ca.nengo.util.VisiblyMutable.Listener)">removeChangeListener</a></strong>(<a href="../../../../../ca/nengo/util/VisiblyMutable.Listener.html" title="interface in ca.nengo.util">VisiblyMutable.Listener</a>&nbsp;listener)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#reset(boolean)">reset</a></strong>(boolean&nbsp;randomize)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#run(float, float)">run</a></strong>(float&nbsp;startTime,
   float&nbsp;endTime)</code>
<div class="block">Runs the Node (including all its components), updating internal state and outputs as needed.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#setBias(float)">setBias</a></strong>(float&nbsp;bias)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#setDocumentation(java.lang.String)">setDocumentation</a></strong>(java.lang.String&nbsp;text)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#setGenerator(ca.nengo.model.neuron.SpikeGenerator)">setGenerator</a></strong>(<a href="../../../../../ca/nengo/model/neuron/SpikeGenerator.html" title="interface in ca.nengo.model.neuron">SpikeGenerator</a>&nbsp;generator)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#setIntegrator(ca.nengo.model.neuron.SynapticIntegrator)">setIntegrator</a></strong>(<a href="../../../../../ca/nengo/model/neuron/SynapticIntegrator.html" title="interface in ca.nengo.model.neuron">SynapticIntegrator</a>&nbsp;integrator)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#setMode(ca.nengo.model.SimulationMode)">setMode</a></strong>(<a href="../../../../../ca/nengo/model/SimulationMode.html" title="enum in ca.nengo.model">SimulationMode</a>&nbsp;mode)</code>
<div class="block">Sets the object to run in either the given mode or the closest mode that it supports 
 (all ModeConfigurables must support SimulationMode.DEFAULT, and must default to this mode).</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#setName(java.lang.String)">setName</a></strong>(java.lang.String&nbsp;name)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#setNoise(ca.nengo.model.Noise)">setNoise</a></strong>(<a href="../../../../../ca/nengo/model/Noise.html" title="interface in ca.nengo.model">Noise</a>&nbsp;noise)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#setRadialInput(float)">setRadialInput</a></strong>(float&nbsp;value)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#setScale(float)">setScale</a></strong>(float&nbsp;scale)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html#toScript(java.util.HashMap)">toScript</a></strong>(java.util.HashMap&lt;java.lang.String,java.lang.Object&gt;&nbsp;scriptData)</code>&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="CURRENT">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>CURRENT</h4>
<pre>public static final&nbsp;java.lang.String CURRENT</pre>
<div class="block">Name of Origin representing unscaled and unbiased current entering the soma.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../../constant-values.html#ca.nengo.model.neuron.impl.SpikingNeuron.CURRENT">Constant Field Values</a></dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="SpikingNeuron(ca.nengo.model.neuron.SynapticIntegrator, ca.nengo.model.neuron.SpikeGenerator, float, float, java.lang.String)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>SpikingNeuron</h4>
<pre>public&nbsp;SpikingNeuron(<a href="../../../../../ca/nengo/model/neuron/SynapticIntegrator.html" title="interface in ca.nengo.model.neuron">SynapticIntegrator</a>&nbsp;integrator,
             <a href="../../../../../ca/nengo/model/neuron/SpikeGenerator.html" title="interface in ca.nengo.model.neuron">SpikeGenerator</a>&nbsp;generator,
             float&nbsp;scale,
             float&nbsp;bias,
             java.lang.String&nbsp;name)</pre>
<div class="block">Note: current = scale * (weighted sum of inputs at each termination) * (radial input) + bias.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>integrator</code> - SynapticIntegrator used to model dendritic/somatic integration of inputs
                to this Neuron</dd><dd><code>generator</code> - SpikeGenerator used to model spike generation at the axon hillock of this
                Neuron</dd><dd><code>scale</code> - A coefficient that scales summed input</dd><dd><code>bias</code> - A bias current that models unaccounted-for inputs and/or intrinsic currents</dd><dd><code>name</code> - A unique name for this neuron in the context of the Network or Ensemble to which
                it belongs</dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="run(float, float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>run</h4>
<pre>public&nbsp;void&nbsp;run(float&nbsp;startTime,
       float&nbsp;endTime)
         throws <a href="../../../../../ca/nengo/model/SimulationException.html" title="class in ca.nengo.model">SimulationException</a></pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code><a href="../../../../../ca/nengo/model/Node.html#run(float, float)">Node</a></code></strong></div>
<div class="block">Runs the Node (including all its components), updating internal state and outputs as needed.
 Runs should be short (eg 1ms), because inputs can not be changed during a run, and outputs
 will only be communicated to other Nodes after a run.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../../../ca/nengo/model/Node.html#run(float, float)">run</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../ca/nengo/model/Node.html" title="interface in ca.nengo.model">Node</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>startTime</code> - simulation time at which running starts (s)</dd><dd><code>endTime</code> - simulation time at which running ends (s)</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../../../ca/nengo/model/SimulationException.html" title="class in ca.nengo.model">SimulationException</a></code> - if a problem is encountered while trying to run</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../../ca/nengo/model/Node.html#run(float, float)"><code>Node.run(float, float)</code></a></dd></dl>
</li>
</ul>
<a name="getOrigins()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getOrigins</h4>
<pre>public&nbsp;<a href="../../../../../ca/nengo/model/Origin.html" title="interface in ca.nengo.model">Origin</a>[]&nbsp;getOrigins()</pre>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../../../ca/nengo/model/Node.html#getOrigins()">getOrigins</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../ca/nengo/model/Node.html" title="interface in ca.nengo.model">Node</a></code></dd>
<dt><span class="strong">Returns:</span></dt><dd>Sets of ouput channels (eg spiking outputs, gap junctional outputs, etc.)</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../../ca/nengo/model/Node.html#getOrigins()"><code>Node.getOrigins()</code></a></dd></dl>
</li>
</ul>
<a name="getOrigin(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getOrigin</h4>
<pre>public&nbsp;<a href="../../../../../ca/nengo/model/Origin.html" title="interface in ca.nengo.model">Origin</a>&nbsp;getOrigin(java.lang.String&nbsp;name)
                 throws <a href="../../../../../ca/nengo/model/StructuralException.html" title="class in ca.nengo.model">StructuralException</a></pre>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../../../ca/nengo/model/Node.html#getOrigin(java.lang.String)">getOrigin</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../ca/nengo/model/Node.html" title="interface in ca.nengo.model">Node</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>name</code> - Name of an Origin on this Node</dd>
<dt><span class="strong">Returns:</span></dt><dd>The named Origin if it exists</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../../../ca/nengo/model/StructuralException.html" title="class in ca.nengo.model">StructuralException</a></code> - if the named Origin does not exist</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../../ca/nengo/model/Node.html#getOrigin(java.lang.String)"><code>Node.getOrigin(java.lang.String)</code></a></dd></dl>
</li>
</ul>
<a name="setMode(ca.nengo.model.SimulationMode)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setMode</h4>
<pre>public&nbsp;void&nbsp;setMode(<a href="../../../../../ca/nengo/model/SimulationMode.html" title="enum in ca.nengo.model">SimulationMode</a>&nbsp;mode)</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code><a href="../../../../../ca/nengo/model/SimulationMode.ModeConfigurable.html#setMode(ca.nengo.model.SimulationMode)">SimulationMode.ModeConfigurable</a></code></strong></div>
<div class="block">Sets the object to run in either the given mode or the closest mode that it supports 
 (all ModeConfigurables must support SimulationMode.DEFAULT, and must default to this mode).</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../../../ca/nengo/model/SimulationMode.ModeConfigurable.html#setMode(ca.nengo.model.SimulationMode)">setMode</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../ca/nengo/model/SimulationMode.ModeConfigurable.html" title="interface in ca.nengo.model">SimulationMode.ModeConfigurable</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>mode</code> - SimulationMode in which it is desired that the object runs.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../../ca/nengo/model/SimulationMode.ModeConfigurable.html#setMode(ca.nengo.model.SimulationMode)"><code>SimulationMode.ModeConfigurable.setMode(ca.nengo.model.SimulationMode)</code></a></dd></dl>
</li>
</ul>
<a name="getMode()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMode</h4>
<pre>public&nbsp;<a href="../../../../../ca/nengo/model/SimulationMode.html" title="enum in ca.nengo.model">SimulationMode</a>&nbsp;getMode()</pre>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../../../ca/nengo/model/SimulationMode.ModeConfigurable.html#getMode()">getMode</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../ca/nengo/model/SimulationMode.ModeConfigurable.html" title="interface in ca.nengo.model">SimulationMode.ModeConfigurable</a></code></dd>
<dt><span class="strong">Returns:</span></dt><dd>The SimulationMode in which the object is running</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../../ca/nengo/model/SimulationMode.ModeConfigurable.html#getMode()"><code>SimulationMode.ModeConfigurable.getMode()</code></a></dd></dl>
</li>
</ul>
<a name="reset(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>reset</h4>
<pre>public&nbsp;void&nbsp;reset(boolean&nbsp;randomize)</pre>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../../../ca/nengo/model/Resettable.html#reset(boolean)">reset</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../ca/nengo/model/Resettable.html" title="interface in ca.nengo.model">Resettable</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>randomize</code> - True indicates that the object should be reset to a 
                randomly selected initial state (the object must be aware of the 
                distribution from which to draw from). False indicates that the 
                object should be reset to a fixed initial state (which it must 
                also know). Some objects may not support randomization of the initial 
                state, in which case a fixed state will be used in either case.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../../ca/nengo/model/Resettable.html#reset(boolean)"><code>Resettable.reset(boolean)</code></a></dd></dl>
</li>
</ul>
<a name="getHistory(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getHistory</h4>
<pre>public&nbsp;<a href="../../../../../ca/nengo/util/TimeSeries.html" title="interface in ca.nengo.util">TimeSeries</a>&nbsp;getHistory(java.lang.String&nbsp;stateName)
                      throws <a href="../../../../../ca/nengo/model/SimulationException.html" title="class in ca.nengo.model">SimulationException</a></pre>
<div class="block">Available states include "I" (net current into SpikeGenerator) and the states of the
 SpikeGenerator.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../../../ca/nengo/model/Probeable.html#getHistory(java.lang.String)">getHistory</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../ca/nengo/model/Probeable.html" title="interface in ca.nengo.model">Probeable</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>stateName</code> - A state variable name</dd>
<dt><span class="strong">Returns:</span></dt><dd>History of values for the named state variable. The history must cover the most recent
                network time step, and no more. There should be no overlap in the time points returned 
                for different steps.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../../../ca/nengo/model/SimulationException.html" title="class in ca.nengo.model">SimulationException</a></code> - if the Probeable does not have the requested state</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../../ca/nengo/model/Probeable.html#getHistory(java.lang.String)"><code>Probeable.getHistory(java.lang.String)</code></a></dd></dl>
</li>
</ul>
<a name="listStates()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>listStates</h4>
<pre>public&nbsp;java.util.Properties&nbsp;listStates()</pre>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../../../ca/nengo/model/Probeable.html#listStates()">listStates</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../ca/nengo/model/Probeable.html" title="interface in ca.nengo.model">Probeable</a></code></dd>
<dt><span class="strong">Returns:</span></dt><dd>List of state variable names, eg "V", and associated descriptions
                eg "membrane potential (mV)"</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../../ca/nengo/model/Probeable.html#listStates()"><code>Probeable.listStates()</code></a></dd></dl>
</li>
</ul>
<a name="getName()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getName</h4>
<pre>public&nbsp;java.lang.String&nbsp;getName()</pre>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../../../ca/nengo/model/Node.html#getName()">getName</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../ca/nengo/model/Node.html" title="interface in ca.nengo.model">Node</a></code></dd>
<dt><span class="strong">Returns:</span></dt><dd>Name of Node (must be unique in a Network)</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../../ca/nengo/model/Node.html#getName()"><code>Node.getName()</code></a></dd></dl>
</li>
</ul>
<a name="setName(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setName</h4>
<pre>public&nbsp;void&nbsp;setName(java.lang.String&nbsp;name)
             throws <a href="../../../../../ca/nengo/model/StructuralException.html" title="class in ca.nengo.model">StructuralException</a></pre>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../../../ca/nengo/model/Node.html#setName(java.lang.String)">setName</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../ca/nengo/model/Node.html" title="interface in ca.nengo.model">Node</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>name</code> - The new name</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../../../ca/nengo/model/StructuralException.html" title="class in ca.nengo.model">StructuralException</a></code> - if name already exists?</dd></dl>
</li>
</ul>
<a name="getScale()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getScale</h4>
<pre>public&nbsp;float&nbsp;getScale()</pre>
<dl><dt><span class="strong">Returns:</span></dt><dd>The coefficient that scales summed input</dd></dl>
</li>
</ul>
<a name="setScale(float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setScale</h4>
<pre>public&nbsp;void&nbsp;setScale(float&nbsp;scale)</pre>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>scale</code> - New scaling coefficient</dd></dl>
</li>
</ul>
<a name="getBias()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getBias</h4>
<pre>public&nbsp;float&nbsp;getBias()</pre>
<dl><dt><span class="strong">Returns:</span></dt><dd>The bias current that models unaccounted-for inputs and/or intrinsic currents</dd></dl>
</li>
</ul>
<a name="setBias(float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setBias</h4>
<pre>public&nbsp;void&nbsp;setBias(float&nbsp;bias)</pre>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>bias</code> - New bias current</dd></dl>
</li>
</ul>
<a name="getIntegrator()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getIntegrator</h4>
<pre>public&nbsp;<a href="../../../../../ca/nengo/model/neuron/SynapticIntegrator.html" title="interface in ca.nengo.model.neuron">SynapticIntegrator</a>&nbsp;getIntegrator()</pre>
<dl><dt><span class="strong">Returns:</span></dt><dd>The SynapticIntegrator used to model dendritic/somatic integration of inputs
                to this Neuron</dd></dl>
</li>
</ul>
<a name="setIntegrator(ca.nengo.model.neuron.SynapticIntegrator)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setIntegrator</h4>
<pre>public&nbsp;void&nbsp;setIntegrator(<a href="../../../../../ca/nengo/model/neuron/SynapticIntegrator.html" title="interface in ca.nengo.model.neuron">SynapticIntegrator</a>&nbsp;integrator)</pre>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>integrator</code> - New synaptic integrator</dd></dl>
</li>
</ul>
<a name="getGenerator()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGenerator</h4>
<pre>public&nbsp;<a href="../../../../../ca/nengo/model/neuron/SpikeGenerator.html" title="interface in ca.nengo.model.neuron">SpikeGenerator</a>&nbsp;getGenerator()</pre>
<dl><dt><span class="strong">Returns:</span></dt><dd>The SpikeGenerator used to model spike generation at the axon hillock of this
                Neuron</dd></dl>
</li>
</ul>
<a name="setGenerator(ca.nengo.model.neuron.SpikeGenerator)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setGenerator</h4>
<pre>public&nbsp;void&nbsp;setGenerator(<a href="../../../../../ca/nengo/model/neuron/SpikeGenerator.html" title="interface in ca.nengo.model.neuron">SpikeGenerator</a>&nbsp;generator)</pre>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>generator</code> - New SpikeGenerator</dd></dl>
</li>
</ul>
<a name="getTerminations()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTerminations</h4>
<pre>public&nbsp;<a href="../../../../../ca/nengo/model/Termination.html" title="interface in ca.nengo.model">Termination</a>[]&nbsp;getTerminations()</pre>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../../../ca/nengo/model/Node.html#getTerminations()">getTerminations</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../ca/nengo/model/Node.html" title="interface in ca.nengo.model">Node</a></code></dd>
<dt><span class="strong">Returns:</span></dt><dd>Sets of input channels (these have the same dimension as corresponding Origins
                to which they are connected).</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../../ca/nengo/model/Node.html#getTerminations()"><code>Node.getTerminations()</code></a></dd></dl>
</li>
</ul>
<a name="getTermination(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTermination</h4>
<pre>public&nbsp;<a href="../../../../../ca/nengo/model/Termination.html" title="interface in ca.nengo.model">Termination</a>&nbsp;getTermination(java.lang.String&nbsp;name)
                           throws <a href="../../../../../ca/nengo/model/StructuralException.html" title="class in ca.nengo.model">StructuralException</a></pre>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../../../ca/nengo/model/Node.html#getTermination(java.lang.String)">getTermination</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../ca/nengo/model/Node.html" title="interface in ca.nengo.model">Node</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>name</code> - Name of a Termination onto this Node</dd>
<dt><span class="strong">Returns:</span></dt><dd>The named Termination if it exists</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../../../ca/nengo/model/StructuralException.html" title="class in ca.nengo.model">StructuralException</a></code> - if the named Termination does not exist</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../../ca/nengo/model/Node.html#getTermination(java.lang.String)"><code>Node.getTermination(java.lang.String)</code></a></dd></dl>
</li>
</ul>
<a name="setRadialInput(float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setRadialInput</h4>
<pre>public&nbsp;void&nbsp;setRadialInput(float&nbsp;value)</pre>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../../../ca/nengo/model/nef/NEFNode.html#setRadialInput(float)">setRadialInput</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../ca/nengo/model/nef/NEFNode.html" title="interface in ca.nengo.model.nef">NEFNode</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>value</code> - Value of filtered summary input. This value is typically in the range 
                [-1 1], and correponds to an inner product of vectors in the space  
                represented by the NEFEnsemble to which this Node belongs.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../../ca/nengo/model/nef/NEFNode.html#setRadialInput(float)"><code>NEFNode.setRadialInput(float)</code></a></dd></dl>
</li>
</ul>
<a name="getDocumentation()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDocumentation</h4>
<pre>public&nbsp;java.lang.String&nbsp;getDocumentation()</pre>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../../../ca/nengo/model/Node.html#getDocumentation()">getDocumentation</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../ca/nengo/model/Node.html" title="interface in ca.nengo.model">Node</a></code></dd>
<dt><span class="strong">Returns:</span></dt><dd>User-specified documentation for the Node, if any</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../../ca/nengo/model/Node.html#getDocumentation()"><code>Node.getDocumentation()</code></a></dd></dl>
</li>
</ul>
<a name="setDocumentation(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setDocumentation</h4>
<pre>public&nbsp;void&nbsp;setDocumentation(java.lang.String&nbsp;text)</pre>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../../../ca/nengo/model/Node.html#setDocumentation(java.lang.String)">setDocumentation</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../ca/nengo/model/Node.html" title="interface in ca.nengo.model">Node</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>text</code> - New user-specified documentation for the Node</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../../ca/nengo/model/Node.html#setDocumentation(java.lang.String)"><code>Node.setDocumentation(java.lang.String)</code></a></dd></dl>
</li>
</ul>
<a name="addChangeListener(ca.nengo.util.VisiblyMutable.Listener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addChangeListener</h4>
<pre>public&nbsp;void&nbsp;addChangeListener(<a href="../../../../../ca/nengo/util/VisiblyMutable.Listener.html" title="interface in ca.nengo.util">VisiblyMutable.Listener</a>&nbsp;listener)</pre>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../../../ca/nengo/util/VisiblyMutable.html#addChangeListener(ca.nengo.util.VisiblyMutable.Listener)">addChangeListener</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../ca/nengo/util/VisiblyMutable.html" title="interface in ca.nengo.util">VisiblyMutable</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>listener</code> - Listener to add</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../../ca/nengo/util/VisiblyMutable.html#addChangeListener(ca.nengo.util.VisiblyMutable.Listener)"><code>VisiblyMutable.addChangeListener(ca.nengo.util.VisiblyMutable.Listener)</code></a></dd></dl>
</li>
</ul>
<a name="removeChangeListener(ca.nengo.util.VisiblyMutable.Listener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeChangeListener</h4>
<pre>public&nbsp;void&nbsp;removeChangeListener(<a href="../../../../../ca/nengo/util/VisiblyMutable.Listener.html" title="interface in ca.nengo.util">VisiblyMutable.Listener</a>&nbsp;listener)</pre>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../../../ca/nengo/util/VisiblyMutable.html#removeChangeListener(ca.nengo.util.VisiblyMutable.Listener)">removeChangeListener</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../ca/nengo/util/VisiblyMutable.html" title="interface in ca.nengo.util">VisiblyMutable</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>listener</code> - Listener to remove</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../../ca/nengo/util/VisiblyMutable.html#removeChangeListener(ca.nengo.util.VisiblyMutable.Listener)"><code>VisiblyMutable.removeChangeListener(ca.nengo.util.VisiblyMutable.Listener)</code></a></dd></dl>
</li>
</ul>
<a name="fireVisibleChangeEvent()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>fireVisibleChangeEvent</h4>
<pre>protected&nbsp;void&nbsp;fireVisibleChangeEvent()</pre>
<div class="block">Called by subclasses when properties have changed in such a way that the
 display of the ensemble may need updating.</div>
</li>
</ul>
<a name="clone()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>clone</h4>
<pre>public&nbsp;<a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuron.html" title="class in ca.nengo.model.neuron.impl">SpikingNeuron</a>&nbsp;clone()
                    throws java.lang.CloneNotSupportedException</pre>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../../../ca/nengo/model/Node.html#clone()">clone</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../ca/nengo/model/Node.html" title="interface in ca.nengo.model">Node</a></code></dd>
<dt><strong>Overrides:</strong></dt>
<dd><code>clone</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
<dt><span class="strong">Returns:</span></dt><dd>An independent copy of the Node</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.CloneNotSupportedException</code> - if clone can't be made</dd></dl>
</li>
</ul>
<a name="setNoise(ca.nengo.model.Noise)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setNoise</h4>
<pre>public&nbsp;void&nbsp;setNoise(<a href="../../../../../ca/nengo/model/Noise.html" title="interface in ca.nengo.model">Noise</a>&nbsp;noise)</pre>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>noise</code> - Noise object to apply to this neuron</dd></dl>
</li>
</ul>
<a name="getNoise()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNoise</h4>
<pre>public&nbsp;<a href="../../../../../ca/nengo/model/Noise.html" title="interface in ca.nengo.model">Noise</a>&nbsp;getNoise()</pre>
<dl><dt><span class="strong">Returns:</span></dt><dd>Noise object applied to this neuron</dd></dl>
</li>
</ul>
<a name="getChildren()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getChildren</h4>
<pre>public&nbsp;<a href="../../../../../ca/nengo/model/Node.html" title="interface in ca.nengo.model">Node</a>[]&nbsp;getChildren()</pre>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../../../ca/nengo/model/Node.html#getChildren()">getChildren</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../ca/nengo/model/Node.html" title="interface in ca.nengo.model">Node</a></code></dd>
</dl>
</li>
</ul>
<a name="toScript(java.util.HashMap)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toScript</h4>
<pre>public&nbsp;java.lang.String&nbsp;toScript(java.util.HashMap&lt;java.lang.String,java.lang.Object&gt;&nbsp;scriptData)
                          throws <a href="../../../../../ca/nengo/util/ScriptGenException.html" title="class in ca.nengo.util">ScriptGenException</a></pre>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../../../ca/nengo/model/Node.html#toScript(java.util.HashMap)">toScript</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../ca/nengo/model/Node.html" title="interface in ca.nengo.model">Node</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>scriptData</code> - Map of class parent and prefix data for generating python script</dd>
<dt><span class="strong">Returns:</span></dt><dd>Python script for generating the node</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../../../ca/nengo/util/ScriptGenException.html" title="class in ca.nengo.util">ScriptGenException</a></code> - if the node cannot be generated in script</dd></dl>
</li>
</ul>
<a name="notifyAboutDeletion()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>notifyAboutDeletion</h4>
<pre>public&nbsp;void&nbsp;notifyAboutDeletion()</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code><a href="../../../../../ca/nengo/model/Node.html#notifyAboutDeletion()">Node</a></code></strong></div>
<div class="block">This method tells the Node (network) that is being deleted from Nengo, 
 Node can inform its children (child Nodes) that are being deleted, 
 these nodes can e.g. stop their ROS backends, their ROS nodes etc..     
 
 Note that it is expected that node returns from this method when 
 everything that should be done before his deletion is done. 
 
 Also, Node does not have to react to this (as in pure Nengo version).
 
 ///my @author Jaroslav Vitku</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../../../ca/nengo/model/Node.html#notifyAboutDeletion()">notifyAboutDeletion</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../ca/nengo/model/Node.html" title="interface in ca.nengo.model">Node</a></code></dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../../ca/nengo/model/neuron/impl/SpikeGeneratorOrigin.html" title="class in ca.nengo.model.neuron.impl"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../../../ca/nengo/model/neuron/impl/SpikingNeuronFactory.html" title="class in ca.nengo.model.neuron.impl"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../../index.html?ca/nengo/model/neuron/impl/SpikingNeuron.html" target="_top">Frames</a></li>
<li><a href="SpikingNeuron.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
